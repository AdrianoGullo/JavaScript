{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,IAAI,GAAG,SAAS;AACtB,IAAMC,SAAS,GAAG,OAAO;AACzB,IAAMC,KAAK,GAAG,EAAE;AAChB,IAAMC,KAAK,GAAG,MAAM;;AAEpB;AACO,IAAMC,GAAG,GAAG,CAAC;AAEpB,SAASC,IAAIA,CAACC,CAAC,EAAEC,CAAC,EAAC;EACf,OAAOD,CAAC,GAACC,CAAC;AACd;AAE0D,CAAW;;AAE9D,IAAME,MAAM,gBAAAC,YAAA;AAAiB;AAChC,SAAAD,OAAYT,IAAI,EAAEC,SAAS,EAAC;EAAAU,eAAA,OAAAF,MAAA;EACxB,IAAI,CAACT,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,SAAS,GAAGA,SAAS;AAC9B,CAAC;;AAGL;AACA,iEAAe,UAACW,CAAC,EAAEC,CAAC;EAAA,OAAKD,CAAC,GAAGC,CAAC;AAAA;;AAE9B;AACA;AACA;;;;;;UC1BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNAC,KAAK,CAAC,YAAY,CAAC;AAEnB,IAAMd,IAAI,GAAG,OAAO,CAAC,CAAW;;AAEsD;AAEtFe,OAAO,CAACC,GAAG,CAACb,0CAAK,EAAEF,+CAAS,EAAEC,2CAAK,CAAC;AACpCa,OAAO,CAACC,GAAG,CAACX,8CAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACzBU,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;AACjBe,OAAO,CAACC,GAAG,CAACR,6CAAO,EAAEJ,yCAAG,CAAC;AAEzB,IAAMa,EAAE,GAAG,IAAIR,4CAAM,CAAC,MAAM,EAAE,OAAO,CAAC;AACtCM,OAAO,CAACC,GAAG,CAACC,EAAE,CAAC,C","sources":["webpack://jsanotacoes/./src/modulo1.js","webpack://jsanotacoes/webpack/bootstrap","webpack://jsanotacoes/webpack/runtime/define property getters","webpack://jsanotacoes/webpack/runtime/hasOwnProperty shorthand","webpack://jsanotacoes/webpack/runtime/make namespace object","webpack://jsanotacoes/./src/index.js"],"sourcesContent":["const nome = 'Adriano';\r\nconst sobrenome = 'Gullo';\r\nconst idade = 25;\r\nconst nome2 = 'Guga';\r\n\r\n//você pode criar a variavel já exportando para outros modulos\r\nexport const dia = 9;\r\n\r\nfunction soma(x, y){\r\n    return x+y;\r\n}\r\n\r\nexport { nome, sobrenome, idade, soma, nome2 as Jogador };           //caso 'soma as default', virá a função 'soma' e mais o que escolher\r\n\r\nexport class Pessoa {               //caso 'export default class Pessoa{', ao chamar import, por padrão a função será importada\r\n    constructor(nome, sobrenome){\r\n        this.nome = nome;\r\n        this.sobrenome = sobrenome;\r\n    }\r\n}\r\n\r\n//Export default com arrow function\r\nexport default (a, b) => a + b;\r\n\r\n//export default function () {} //também class, function*\r\n//export default function funcao() {} //também class, function*\r\n//export {name1 as default};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","alert('Olá Mundo!');\r\n\r\nconst nome = 'Paulo';           //caso vá importar uma variavel 'nome' mas já estiver sendo usado no código, 'import {nome as nome2}'\r\n\r\nimport {nome as nome2, sobrenome, idade, soma, Jogador, dia, Pessoa} from './modulo1';\r\n\r\nconsole.log(nome2, sobrenome, idade);\r\nconsole.log(soma(10, 11));\r\nconsole.log(nome);\r\nconsole.log(Jogador, dia);\r\n\r\nconst p1 = new Pessoa('Joao', 'Pedro');\r\nconsole.log(p1);"],"names":["nome","sobrenome","idade","nome2","dia","soma","x","y","Jogador","Pessoa","_createClass","_classCallCheck","a","b","alert","console","log","p1"],"sourceRoot":""}